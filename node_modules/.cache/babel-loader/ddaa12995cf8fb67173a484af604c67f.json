{"ast":null,"code":"var _jsxFileName = \"/Users/EJ/Documents/GitHub/BigRed-Unsaid-App/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport firebaseApp from \"./firebase.js\";\nimport { KEYS } from 'eslint-visitor-keys';\nvar field = 'emotion1';\nvar value = 'happy';\n\nfunction getWords() {\n  var words = firebaseApp.firestore();\n  words.collection('words').where(field, '==', value).get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      console.log(doc.id, '=>', doc.data());\n    });\n  });\n}\n\nfunction snapshotToArray() {\n  var words = firebaseApp.firestore();\n  words.collection('words').where(field, '==', value).ref.once('value', function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      var chosen = doc.val();\n      KEYS.push(chosen);\n    });\n\n    for (i = 0; i < keys.length; i++) {\n      counts.push(keys[i].wordcount);\n    }\n  });\n}\n/* function snapshotToArray(snapshot) {\n    var bubbles = [];\n    snapshot.forEach(function(childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        bubbles.push(item);\n    });\n    return bubbles;\n} */\n\n/* function getWords() {\n  var db = firebaseApp.firestore();\n  db.collection(\"words\").where(field, '==', value).get()\n    .then((snapshot) => {\n      snapshot.forEach((doc) => {\n        console.log(doc.id, '=>', doc.data());\n      });\n    })\n} */\n\n\nfunction App() {\n  getWords();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/EJ/Documents/GitHub/BigRed-Unsaid-App/src/App.js"],"names":["React","firebaseApp","KEYS","field","value","getWords","words","firestore","collection","where","get","then","querySnapshot","forEach","doc","console","log","id","data","snapshotToArray","ref","once","chosen","val","push","i","keys","length","counts","wordcount","App","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,QAAqB,qBAArB;AAEA,IAAIC,KAAK,GAAG,UAAZ;AACA,IAAIC,KAAK,GAAG,OAAZ;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIC,KAAK,GAAGL,WAAW,CAACM,SAAZ,EAAZ;AACAD,EAAAA,KAAK,CAACE,UAAN,CAAiB,OAAjB,EAA0BC,KAA1B,CAAgCN,KAAhC,EAAuC,IAAvC,EAA6CC,KAA7C,EAAoDM,GAApD,GACGC,IADH,CACQ,UAASC,aAAT,EAAwB;AAC5BA,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAhB,EAAoB,IAApB,EAA0BH,GAAG,CAACI,IAAJ,EAA1B;AACD,KAFD;AAGD,GALH;AAMD;;AAED,SAASC,eAAT,GAA2B;AACzB,MAAIb,KAAK,GAAGL,WAAW,CAACM,SAAZ,EAAZ;AACAD,EAAAA,KAAK,CAACE,UAAN,CAAiB,OAAjB,EAA0BC,KAA1B,CAAgCN,KAAhC,EAAuC,IAAvC,EAA6CC,KAA7C,EACAgB,GADA,CACIC,IADJ,CACS,OADT,EACiB,UAAST,aAAT,EAAwB;AACrCA,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAClC,UAAIQ,MAAM,GAAGR,GAAG,CAACS,GAAJ,EAAb;AACArB,MAAAA,IAAI,CAACsB,IAAL,CAAUF,MAAV;AACD,KAHD;;AAIF,SAAKG,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAGC,IAAI,CAACC,MAAnB,EAA2BF,CAAC,EAA5B,EAAgC;AAC5BG,MAAAA,MAAM,CAACJ,IAAP,CAAYE,IAAI,CAACD,CAAD,CAAJ,CAAQI,SAApB;AACH;AACA,GATH;AAUD;AAED;;;;;;;;;;AAUA;;;;;;;;;;;AAUA,SAASC,GAAT,GAAe;AACbzB,EAAAA,QAAQ;AACR,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAE0B,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,EAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF;AAkBD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport firebaseApp from \"./firebase.js\"\nimport { KEYS } from 'eslint-visitor-keys';\n\nvar field = 'emotion1';\nvar value = 'happy';\n\nfunction getWords() {\n  var words = firebaseApp.firestore();\n  words.collection('words').where(field, '==', value).get()\n    .then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        console.log(doc.id, '=>', doc.data());\n      });\n    });\n}\n\nfunction snapshotToArray() {\n  var words = firebaseApp.firestore();\n  words.collection('words').where(field, '==', value).\n  ref.once('value',function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n        var chosen = doc.val();\n        KEYS.push(chosen);\n      });\n    for (i=0; i < keys.length; i++) {\n        counts.push(keys[i].wordcount);\n    }   \n    });\n}\n\n/* function snapshotToArray(snapshot) {\n    var bubbles = [];\n    snapshot.forEach(function(childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        bubbles.push(item);\n    });\n    return bubbles;\n} */\n\n/* function getWords() {\n  var db = firebaseApp.firestore();\n  db.collection(\"words\").where(field, '==', value).get()\n    .then((snapshot) => {\n      snapshot.forEach((doc) => {\n        console.log(doc.id, '=>', doc.data());\n      });\n    })\n} */\n\nfunction App() {\n  getWords();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}